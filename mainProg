import requests
import time
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Configuration
SYMBOL = "BTCUSDT"
API_URL = f"https://api.binance.com/api/v3/ticker/price?symbol={SYMBOL}"
CHECK_INTERVAL = 10  # seconds

# Email Settings
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587
SENDER_EMAIL = "your_email@gmail.com"
SENDER_PASSWORD = "your_email_password"
RECEIVER_EMAIL = "receiver_email@gmail.com"

# Price Thresholds
UPPER_THRESHOLD = float(input("Enter upper price threshold: "))
LOWER_THRESHOLD = float(input("Enter lower price threshold: "))

def send_email_alert(subject, body):
    try:
        msg = MIMEMultipart()
        msg["From"] = SENDER_EMAIL
        msg["To"] = RECEIVER_EMAIL
        msg["Subject"] = subject

        msg.attach(MIMEText(body, "plain"))

        server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        server.starttls()
        server.login(SENDER_EMAIL, SENDER_PASSWORD)
        server.sendmail(SENDER_EMAIL, RECEIVER_EMAIL, msg.as_string())
        server.quit()

        print(f"Email sent: {subject}")
    except Exception as e:
        print(f"Failed to send email: {e}")

def check_price():
    try:
        response = requests.get(API_URL)
        response.raise_for_status()
        data = response.json()
        current_price = float(data["price"])
        print(f"Current {SYMBOL} price: {current_price}")

        if current_price > UPPER_THRESHOLD:
            alert_message = f"{SYMBOL} price has risen above {UPPER_THRESHOLD}. Current price: {current_price}"
            print(alert_message)
            send_email_alert("Price Alert: Upper Threshold Reached", alert_message)

        elif current_price < LOWER_THRESHOLD:
            alert_message = f"{SYMBOL} price has fallen below {LOWER_THRESHOLD}. Current price: {current_price}"
            print(alert_message)
            send_email_alert("Price Alert: Lower Threshold Reached", alert_message)

    except requests.exceptions.RequestException as e:
        print(f"Error fetching price: {e}")

def main():
    print(f"Starting {SYMBOL} price monitoring...\nUpper Threshold: {UPPER_THRESHOLD}\nLower Threshold: {LOWER_THRESHOLD}")
    while True:
        check_price()
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()
